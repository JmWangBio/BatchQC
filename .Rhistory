saveRDS(batch_indicator, "batch_indicator.RDA")
saveRDS(batch_indicator, "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
saveRDS(signature_data, "/Users/jessmcc/Documents/workProjects/BatchQC/data/signature_data.rda")
BatchQC()
type(batch_indicator)
as.array(batch_indicator)
as.data.frame(batch_indicator)
batch_indicator <- as.data.frame(batch_indicator)
colnames(batch_indicator) <- c("batch", "row")
saveRDS(batch_indicator, "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
type(signature_data)
type(protein_data)
type(protein_sample_info)
data("signature_data")
data("signature_data")
data("batch_indicator")
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
batch_indicator <- as.data.frame(batch_indicator)
> colnames(batch_indicator) <- c("batch", "row")
batch_indicator <- as.data.frame(batch_indicator)
colnames(batch_indicator) <- c("batch", "row")
saveRDS(batch_indicator, "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
readRDS(batch_indicator)
readRDS("batch_indicator.rda")
save(batch_indicator, "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
save(batch_indicator, file = "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
load(batch_indicator)
load("batch_indicator")
load("batch_indicator.rda")
load("batch_indicator.rda")
load("signature_data.rda")
load("data/signature_data.rda")
load("~/Documents/workProjects/BatchQC/data/signature_data.rda")
load("~/Documents/workProjects/BatchQC/data/protein_data.rda")
load("~/Downloads/example_batchqc_data (1).rda")
save(batch_indicator, "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
save(batch_indicator, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
save(signature_data, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/signature_data.rda")
load("~/Documents/workProjects/BatchQC/data/signature_data.rda")
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
batch_indicator[1:2]
batch_indicator[1:2]
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
row.names(batch_indicator)
row.names(signature_data)
colnames(signature_data)
load("~/Documents/workProjects/BatchQC/data/protein_data.rda")
load("~/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
col.names(batch_indicator)
row.names(batch_indicator)
batch_indicator_2 <- as.data.frame(batch_indicator)
col.names(batch_indicator_2) < c("batch", "condition")
colnames(batch_indicator)
colnames(batch_indicator) <- c("batch", "condition")
batch_indicator <- cbind(c(rownames(signature_data), batch_indicator))
View(batch_indicator)
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
load("~/Documents/workProjects/BatchQC/data/signature_data.rda")
colnames(batch_indicator) <- c("batch", "condition")
batch_indicator <- cbind(c(colnames(signature_data), batch_indicator))
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
colnames(batch_indicator) <- c("batch", "condition")
load("~/Documents/workProjects/BatchQC/data/signature_data.rda")
colnames(signature_data)
samples <- colnames(signature_data)
cbind(samples, batch_indicator)
batch_indicator <- cbind(samples, batch_indicator)
row.names(signature_data)
colnames(signature_data)
save(batch_indicator, file = "/Users/jessmcc/Documents/workProjects/BatchQC/data/batch_indicator.rda")
load("~/Documents/workProjects/BatchQC/data/batch_indicator.rda")
library(BatchQC)
BatchQC()
row.names(signature_data)
row.names(batch_indicator)
load("~/Documents/workProjects/BatchQC/data/protein_data.rda")
load("~/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
row.names(protein_sample_info)
BatchQC()
unique(batch_indicator$samples)
!unique(batch_indicator$samples)
library(BatchQC)
BatchQC()
library(bladderbatch)
BiocManager::install("bladderbatch")
BiocManager::install("bladderbatch")
BatchQC()
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
BatchQC()
load("~/Documents/workProjects/BatchQC/data/signature_data.rda")
View(signature_data)
sigLog <- log(signature_data)
BatchWC()
BatchQC()
dend_function <- function(){
num <- 5
multnum <- 5*6
print(mulnum)
}
dend_function()
dend_function <- function(){
num <- 5
multnum <- 5*6
print(multnum)
}
dend_function()
dend_function <- function(){
num <- 5
multnum <- 5*6
print(multnum)
}
dend_function <- function(){
num <- 5
multnum <- 5*6
print(multnum)
}
dend_function <- function(){
num <- 5
browser()
multnum <- 5*6
print(mulnum)
}
dend_function()
load("~/Documents/workProjects/BatchQC/data/bladderdatacondition.rda")
load("~/Documents/workProjects/BatchQC/data/bladderdatabatch.rda")
bladdermeta <- as.data.frame(c(batch, condition))
bladdermeta <- as.data.frame(cbind(batch, condition))
View(bladdermeta)
load("~/Documents/workProjects/BatchQC/data/bladderdata.rda")
load("~/Documents/workProjects/BatchQC/data/bladderdata.rda")
View(edata)
samplesbladder <- col.names(edata)
samplesbladder <- colnames(edata)
bladdermeta <- as.data.frame(cbind(edata, batch, condition))
View(bladdermeta)
unique(colnames(edata))
bladdermeta <- NULL
bladdermeta <- cbind(samplesbladder, batch, condition)
View(bladdermeta)
save(bladdermeta, "/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
save(bladdermeta, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
load("~/Documents/workProjects/BatchQC/data/bladder_meta.rda")
load("~/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
bladdermeta <- as.data.frame(bladdermeta)
save(bladdermeta, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
load("~/Documents/workProjects/BatchQC/data/bladder_meta.rda")
load("~/Documents/workProjects/BatchQC/data/bladderdata.rda")
bladder_meta <- bladdermeta
save(bladder_meta, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
bladder_data <- edata
save(bladder_data, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_data.rda")
load("~/Documents/workProjects/BatchQC/data/bladder_data.rda")
View(bladder_data)
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
for(i in 1:length(bladder_meta$condition){if(bladder_meta$condition[i] == "3"){bladder_meta$condition <- "control"}else if(bladder_meta$condition[i] == "2"){bladder_meta$condition <- "cancer"}else if(bladder_meta$condition[i] == "1"){bladder_meta$condition <- "biopsy"}}
for(i in 1:length(bladder_meta$condition)){if(bladder_meta$condition[i] == "3"){bladder_meta$condition <- "control"}else if(bladder_meta$condition[i] == "2"){bladder_meta$condition <- "cancer"}else if(bladder_meta$condition[i] == "1"){bladder_meta$condition <- "biopsy"}}
save(bladder_meta, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
load("~/Documents/workProjects/BatchQC/data/bladder_meta.rda")
library(BatchQC)
BatchQC()
load("/Users/jessmcc/Downloads/bladderdatacondition.rda")
condition
bladder_meta[3] <- condition
View(bladder_meta)
save(bladder_meta, file="/Users/jessmcc/Documents/workProjects/BatchQC/data/bladder_meta.rda")
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
BiocCheck::BiocCheck("~/projects/combat/work/jessmcc/BatchQC/")
BiocCheck::BiocCheck(file="~/projects/combat/work/jessmcc/BatchQC")
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
library(BatchQC)
library(BatchQC)
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
version
BiocManager::install("bladderbatch")
BiocManager::install("bladderbatch")
BiocManager::install("bladderbatch", force=TRUE)
BatchQC()
library(BatchQC)
BatchQC()
vignette("intro")
vignette("intro", "BatchQC")
vignette("Introduction to BatchQC", "BatchQC")
vignette("BatchQC_Intro", "BatchQC")
browseVignettes(package=BatchQC)
library(BatchQC)
browseVignettes(package=BatchQC)
browseVignettes()
BatchQC()
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
BatchQC()
BatchQC()
BatchQC()
BatchWC()
BatchQC()
BatchQC()
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
BatchQC()
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
BatchQC()
BiocCheck::BiocCheck("/Users/jessmcc/Documents/workProjects/BatchQC")
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
BiocCheck::BiocCheck("/Users/jessmcc/Documents/workProjects/BatchQC")
BatchQC::data(signature)
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
library(BatchQC)
BatchQC()
data(example_batchqc_data)
data(protein_data)
View(protein_data)
View(protein_sample_info)
# Chunk 1
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.17")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.16")
#if (!requireNamespace("BiocManager", quietly=TRUE))
#    install.packages("BiocManager")
#BiocManager::install("BatchQC")
install.packages("devtools")
library(devtools)
install_github("compbiomed/BatchQC")
library(BatchQC)
counts_matrix <- data(protein_data)
metadata_matrix <- data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(counts_matrix, metadata_matrix)
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
View(se_object)
# CPM Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "CPM",
assay_to_normalize = "counts", output_assay_name = "CPM_normalized_counts")
# DESeq Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "DESeq",
assay_to_normalize = "counts", "DESeq_normalized_counts")
# log adjust
se_object@assays@data[["log_normalized_counts"]] <-
log(se_object@assays@data[["counts"]])
View(se_object)
BatchQC()
protein_sample_info <- protein_sample_info[2:3,]
View(protein_sample_info)
data(protein_sample_info)
protein_sample_info <- protein_sample_info[,2:4]
rownames(protein_sample_info)[2] <- "batch"
data(protein_sample_info)
protein_sample_info <- protein_sample_info[,2:4]
colnames(protein_sample_info)[2] <- "batch"
save(protein_sample_info, file = "/Users/jessmcc/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
library(BatchQC)
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
# CPM Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "CPM",
assay_to_normalize = "counts", output_assay_name = "CPM_normalized_counts")
# DESeq Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "DESeq",
assay_to_normalize = "counts", "DESeq_normalized_counts")
# log adjust
se_object@assays@data[["log_normalized_counts"]] <-
log(se_object@assays@data[["counts"]])
View(se_object)
se_object@metadata[["metadata"]][["batch"]]
se_object@metadata[["metadata"]][["category"]]
se_object@assays@data@listData[["counts"]]
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
View(protein_sample_info)
for(i in 1:length(protein_sample_info$samplename)){paste0("X", protein_sample_info$samplename[i])}
for(i in 1:length(protein_sample_info$samplename)){protein_sample_info$samplename[i] <- paste0("X", protein_sample_info$samplename[i])}
data("protein_sample_info")
for(i in 1:length(protein_sample_info$samplename)){temp<-paste0("X", protein_sample_info$samplename[i])
)
for(i in 1:length(protein_sample_info$samplename)){temp<-paste0("X", protein_sample_info$samplename[i])}
length(protein_sample_info$samplename)
for(i in 1:length(protein_sample_info$samplename)){protein_sample_info$samplename[i]<-paste0("X", protein_sample_info$samplename[i])}
warnings()
data("protein_sample_info")
temp <- paste0("X", protein_sample_info$samplename)
rownames(protein_sample_info) <- temp
save(protein_sample_info, file = "/Users/jessmcc/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
load("~/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
rowname(columndata)
rownames(columndata)
View(protein_sample_info)
temp <- paste0("X", protein_sample_info$samplename)
rownames(protein_sample_info) <- temp
save(protein_sample_info, file = "/Users/jessmcc/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
load("~/Documents/workProjects/BatchQC/data/protein_sample_info.rda")
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
View(se_object)
# CPM Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "CPM",
assay_to_normalize = "counts", output_assay_name = "CPM_normalized_counts")
# DESeq Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "DESeq",
assay_to_normalize = "counts", "DESeq_normalized_counts")
# log adjust
se_object@assays@data[["log_normalized_counts"]] <-
log(se_object@assays@data[["counts"]])
# Combat-Seq correction
se_object <- BatchQC::batch_correct(se = se_object, method = "ComBat-Seq",
assay_to_normalize = "counts" , batch = "batch",
covar = covariate_list, output_assay_name = "Combat_Seq_corrected")
View(se_object)
# Combat-Seq correction
se_object <- BatchQC::batch_correct(se = se_object, method = "ComBat-Seq",
assay_to_normalize = "counts" , batch = "batch",
covar = "category", output_assay_name = "Combat_Seq_corrected")
# Combat correction
se_object <- BatchQC::batch_correct(se = se_object, method = "Combat",
assay_to_normalize = "", batch = "batch",
covar = c("category"), output_assay_name = "Combat_corrected")
View(se_object)
library(BatchQC)
BatchQC()
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
# CPM Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "CPM",
assay_to_normalize = "counts", output_assay_name = "CPM_normalized_counts")
# DESeq Normalization
se_object <- BatchQC::normalize_SE(se = se_object, method = "DESeq",
assay_to_normalize = "counts", "DESeq_normalized_counts")
# log adjust
se_object@assays@data[["log_normalized_counts"]] <-
log(se_object@assays@data[["counts"]])
# Combat-Seq correction
se_object <- BatchQC::batch_correct(se = se_object, method = "ComBat-Seq",
assay_to_normalize = "counts" , batch = "batch",
covar = "category", output_assay_name = "Combat_Seq_corrected")
# Combat correction
se_object <- BatchQC::batch_correct(se = se_object, method = "Combat",
assay_to_normalize = "", batch = "batch",
covar = c("category"), output_assay_name = "Combat_corrected")
batch_design_tibble <- BatchQC::batch_design(se = se_object, batch = "batch",
covariate = "category")
batch_design_tibble
confound_table <- BatchQC::confound_metrics(se = se_object, batch = "batch")
confound_table
pearson_cor_result <- BatchQC::std_pearson_corr_coef(batch_design_tibble)
cramers_v_result <- BatchQC::cramers_v(batch_design_tibble)
BatchQC::EV_plotter(se = se_object, batch = "batch", condition = "category",
assay_name = "counts")
BatchQC::EV_plotter(se = se_object, batch = "batch", condition = "category",
assay_name = "counts")
EV_boxplot <- BatchQC::EV_plotter(se = se_object, batch = "batch",
condition = "category", assay_name = "counts")
EV_boxplot
EV_table <- BatchQC::EV_table(se = se_object, batch = "batch",
condition = "category", assay_name = "counts")
EV_table
BatchQC()
Q
Q
BatchQC()
BatchQC()
heatmaps <- BatchQC::heatmap_plotter(se = se_object, assay = "counts", nfeature = 2,
annotation_column = c("batch", "category"))
correlation_heatmap <- heatmaps$co
heatmaps <- BatchQC::heatmap_plotter(se = se_object, assay = "counts", nfeature = 2,
annotation_column = c("batch", "category"))
correlation_heatmap <- heatmaps$co
library(BatchQC)
BatchQC()
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
View(protein_sample_info)
View(protein_data)
se@metadata
se_object@metadata
se_object@colData
View(se_object)
BatchQC()
library(BatchQC)
BatchQC()
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
data(signature_data)
data(batch_indicator)
se_object <- BatchQC::summarized_experiment(signature_data, batch_indicator)
se <- se_object
sex <- c('Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Female', 'Female', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Male', 'Male', 'Female', 'Female', 'Male', 'Female', 'Male', 'Male', 'Female', 'Female', 'Female', 'Female', 'Female', 'Male', 'Male', 'Male', 'Male', 'Female', 'Male', 'Female', 'Male', 'Male', 'Male', 'Female', 'Male', 'Male', 'Male'
)
# Using accessor functions
colData(se)$sex <- sex
View(se)
data(protein_data)
data(protein_sample_info)
se_object <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
# Define 10 specific diseases
unique_diseases <- c("HIV", "Cholera", "Tuberculosis", "Malaria", "Influenza",
"Ebola", "Zika", "Dengue", "Typhoid", "Measles")
# Repeating the diseases until we have a list of 89
diseases <- rep(unique_diseases, ceiling(24 / length(unique_diseases)))[1:24]
# Shuffle the diseases list to introduce randomness
random_diseases <- sample(diseases, length(diseases))
colData(se)$Diseases <- random_diseases
data(protein_data)
data(protein_sample_info)
se <- BatchQC::summarized_experiment(protein_data, protein_sample_info)
# Define 10 specific diseases
unique_diseases <- c("HIV", "Cholera", "Tuberculosis", "Malaria", "Influenza",
"Ebola", "Zika", "Dengue", "Typhoid", "Measles")
# Repeating the diseases until we have a list of 89
diseases <- rep(unique_diseases, ceiling(24 / length(unique_diseases)))[1:24]
# Shuffle the diseases list to introduce randomness
random_diseases <- sample(diseases, length(diseases))
colData(se)$Diseases <- random_diseases
library(BatchQC)
BatchQC()
save(se, "/Users/jessmcc/Downloads/se.rda")
save(se, file="/Users/jessmcc/Downloads/se.rda")
BatchQC()
save(se, file="/Users/jessmcc/Downloads/se.rds")
BatchQC()
BatchQC()
se_1 <- readRDS("~/Downloads/se_1.RDS")
se <- se_1
# Define 10 specific diseases
unique_diseases <- c("HIV", "Cholera", "Tuberculosis", "Malaria", "Influenza",
"Ebola", "Zika", "Dengue", "Typhoid", "Measles")
# Repeating the diseases until we have a list of 89
diseases <- rep(unique_diseases, ceiling(24 / length(unique_diseases)))[1:24]
# Shuffle the diseases list to introduce randomness
random_diseases <- sample(diseases, length(diseases))
colData(se)$Diseases <- random_diseases
save(se, file="/Users/jessmcc/Downloads/se.rds")
BatchQC()
BatchQC()
saveRDS((se, file="/Users/jessmcc/Downloads/se.rds"))
saveRDS((se, file="/Users/jessmcc/Downloads/se.rds")
saveRDS(se, file="/Users/jessmcc/Downloads/se.rds")
BatchQC()
as.numeric("F")
as.numeric("2")
as.numeric("A", "L")
is.numeric("1")
is.numeric(1)
